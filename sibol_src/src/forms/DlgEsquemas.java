/*
 * DlgEsquemas.java
 *
 * Created on 26 de octubre de 2006, 18:00
 */

package forms;

import funciones.BaseDatos;
import funciones.ParCombo;
import funciones.Sesion;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import main.Mensaje;

/**
 *
 * @author  oscar
 */
public class DlgEsquemas extends javax.swing.JDialog {
    
    BaseDatos bd = null;
    
    /** Creates new form DlgEsquemas */
    public DlgEsquemas(javax.swing.JFrame frame, boolean modal){
        super(frame, modal);
        initComponents();
        bd = Sesion.getInstance().getBaseDatos();
        agregarOpciones();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEsquemasTipo = new javax.swing.JList();
        jButtonCargar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEsquemaTipo = new javax.swing.JTextField();
        jButtonGuardar = new javax.swing.JButton();
        jButtonCerrar = new javax.swing.JButton();

        setIconImage((new ImageIcon(getClass().getResource("/resources/icons/sibol.gif"))).getImage());
        jLabel1.setText("Seleccione un esquema tipo de la lista:");

        jScrollPane1.setViewportView(jListEsquemasTipo);

        jButtonCargar.setText("Cargar");
        jButtonCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarActionPerformed(evt);
            }
        });

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .add(jLabel1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jButtonBorrar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 185, Short.MAX_VALUE)
                        .add(jButtonCargar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonCargar)
                    .add(jButtonBorrar))
                .addContainerGap())
        );
        jTabbedPane1.addTab("Gestionar", jPanel1);

        jLabel2.setText("Guardar esquema actual como esquema tipo:");

        jLabel3.setText("Nombre:");

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextFieldEsquemaTipo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonGuardar))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jTextFieldEsquemaTipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButtonGuardar)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jTabbedPane1.addTab("Crear", jPanel2);

        jButtonCerrar.setText("Cerrar");
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonCerrar))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButtonCerrar)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        String nombre = jTextFieldEsquemaTipo.getText();
        if(nombre==null || "".equals(nombre)){
            Mensaje.aviso("Debe introducir el nombre del esquema tipo");
        } else {
            nombre = nombre.replaceAll("'","''");
            try {
                ResultSet rs = bd.ejecSelect("SELECT ETDESC FROM ESQUEMAS_TIPO WHERE ETDESC='"+nombre+"'");
                if(rs.next()){
                    Mensaje.aviso("Ya existe un esquema tipo con ese nombre");
                } else {
                    FrmPrincipal frmPrincipal = (FrmPrincipal)this.getParent();
                    bd.ejecModificacion("INSERT INTO ESQUEMAS_TIPO (ETDESC,ETESQUEMA) VALUES('"+nombre+"','"+frmPrincipal.getFrmGrafico().getXML()+"')");
                    this.setVisible(false);
                    this.dispose();
                }
            } catch (SQLException ex) {
                Mensaje.error("Error al verificar la duplicidad de nombre en la BD: "+ex.getMessage(),ex);
            }
        }
        
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarActionPerformed
        ParCombo seleccionado = (ParCombo) jListEsquemasTipo.getSelectedValue();
        if(seleccionado!=null){
            JOptionPane optionPane=new JOptionPane();
            Object[] opciones={"Aceptar","Cancelar"};
            int ret = optionPane.showOptionDialog(
                        null,
                        "Al cargar un esquema tipo se eliminan todos los elementos actualmente ubicados en el grafo\n¿CONFIRMA QUE DESEA CARGAR EL ESQUEMA TIPO SELECCIONADO?",
                        "Confirmar carga de esquema tipo.",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        opciones,
                        opciones[0]
                    );

            if(ret==JOptionPane.YES_OPTION){
                try {
                    ResultSet rs = bd.ejecSelect("SELECT ETESQUEMA FROM ESQUEMAS_TIPO WHERE ETID="+seleccionado.getKeyInt());
                    if(rs.next()){
                        FrmPrincipal frmPrincipal = (FrmPrincipal)this.getParent();
                        frmPrincipal.getFrmGrafico().setXML(rs.getString("ETESQUEMA"));
                        this.setVisible(false);
                        this.dispose();
                    } else {
                        Mensaje.aviso("No se ha encontrado en la BD el esquema tipo seleccionado");
                    }
                } catch (SQLException ex) {
                    Mensaje.error("DlgEsquemas.java: "+ex.getMessage(),ex);
                }
            }
        } else {
            Mensaje.aviso("Debe seleccionar el esquema tipo a cargar");
        }
    }//GEN-LAST:event_jButtonCargarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        ParCombo seleccionado = (ParCombo) jListEsquemasTipo.getSelectedValue();
        if(seleccionado!=null){
            JOptionPane optionPane=new JOptionPane();
            Object[] opciones={"Aceptar","Cancelar"};
            int ret = optionPane.showOptionDialog(
                        null,
                        "¿CONFIRMA QUE DESEA ELIMINAR EL ESQUEMA TIPO SELECCIONADO?",
                        "Confirmar eliminación de esquema tipo.",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        opciones,
                        opciones[0]
                    );

            if(ret==JOptionPane.YES_OPTION){
                try {
                    bd.ejecModificacion("DELETE FROM ESQUEMAS_TIPO WHERE ETID="+seleccionado.getKeyInt());
                    agregarOpciones();
                } catch (SQLException ex) {
                    Mensaje.error("DlgEsquemas.java: "+ex.getMessage(),ex);
                }
            }
        } else {
            Mensaje.aviso("Debe seleccionar el esquema tipo a borrar");
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonCerrarActionPerformed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonCargar;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jListEsquemasTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldEsquemaTipo;
    // End of variables declaration//GEN-END:variables

    private void agregarOpciones() {
        ResultSet rs = null;
        try{
            rs = bd.ejecSelect("SELECT ETID,ETDESC FROM ESQUEMAS_TIPO ORDER BY ETDESC ASC");
            DefaultListModel model = new DefaultListModel();
            jListEsquemasTipo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            while(rs.next()){
                model.addElement(new ParCombo(rs.getInt("ETID"),rs.getString("ETDESC")));
            }
            jListEsquemasTipo.setModel(model);
        } catch(SQLException e){
            Mensaje.error("DlgEsquemas.java: "+e.getMessage(),e);
        }       
    }
    
}
