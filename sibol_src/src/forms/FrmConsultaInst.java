/*
 * FrmConsultaInst.java
 *
 * Created on 1 de agosto de 2006, 9:51
 */

package forms;

import forms.establecer.EstablecerDatos;
import funciones.BaseDatos;
import funciones.ParCombo;
import funciones.Sesion;
import funciones.Utilidades;
import funciones.UtilidadesSQL;
import funciones.beans.ModeloTablaNoEditable;
import java.awt.Cursor;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import main.Constantes;
import main.Mensaje;

/**
 *
 * @author  enrique
 */
public class FrmConsultaInst extends javax.swing.JFrame {
    
    private BaseDatos bd;
    private EstablecerDatos establecerDatos;
    /**
     * Creates new form FrmConsultaInst
     */
    public FrmConsultaInst() {
        initComponents(); 
        bd = Sesion.getInstance().getBaseDatos();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblBusqueda = new javax.swing.JTable();
        jBttnIr = new javax.swing.JButton();
        jBttnBorrar = new javax.swing.JButton();
        jBttnMenuPrincipal = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTxtFldFecha = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTxtFldNombre = new javax.swing.JTextField();
        jBttnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consulta instalaci\u00f3n");
        setIconImage((new ImageIcon(getClass().getResource("/resources/icons/sibol.gif"))).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INSTALACIONES DISPONIBLES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18)));
        jTblBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Nombre de instalación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableColumn column = null;
        column = jTblBusqueda.getColumnModel().getColumn(0);
        column.setPreferredWidth(20);
        column = jTblBusqueda.getColumnModel().getColumn(1);
        column.setPreferredWidth(500);
        jTblBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblBusquedaMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTblBusqueda);

        jBttnIr.setText("VER INSTALACI\u00d3N");
        jBttnIr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnIrActionPerformed(evt);
            }
        });

        jBttnBorrar.setText("BORRAR INSTALACI\u00d3N");
        jBttnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnBorrarActionPerformed(evt);
            }
        });

        jBttnMenuPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/tofront.gif")));
        jBttnMenuPrincipal.setText("MEN\u00da PRINCIPAL");
        jBttnMenuPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnMenuPrincipalActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CRITERIO DE B\u00daSQUEDA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18)));
        jLabel2.setText("FECHA INSTALACI\u00d3N");

        jTxtFldFecha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtFldFechaFocusLost(evt);
            }
        });

        jLabel5.setText("NOMBRE INSTALACI\u00d3N");

        jBttnBuscar.setText("BUSCAR");
        jBttnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBttnBuscarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jTxtFldNombre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 458, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jBttnBuscar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jTxtFldFecha)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(273, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTxtFldFecha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTxtFldNombre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jBttnBuscar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jBttnIr, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jBttnBorrar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jBttnMenuPrincipal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {jBttnBorrar, jBttnIr, jBttnMenuPrincipal}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jBttnBorrar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jBttnIr, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jBttnMenuPrincipal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(13, 13, 13))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtFldFechaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtFldFechaFocusLost
        if("".equals(jTxtFldFecha.getText())) return;
        String f = UtilidadesSQL.normalizarFecha(jTxtFldFecha.getText());
        if("".equals(f)) {
            Mensaje.error("La fecha no es válida");
        }
        else jTxtFldFecha.setText(f);
    }//GEN-LAST:event_jTxtFldFechaFocusLost

    private void jTblBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblBusquedaMouseClicked
        // doble click sobre un elemento de la tabla
        if(evt.getClickCount() == 2) {
            jBttnIrActionPerformed(null);
        }
    }//GEN-LAST:event_jTblBusquedaMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Sesion.getInstance().cerrarAplicacion();
    }//GEN-LAST:event_formWindowClosing

    private void jBttnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnBorrarActionPerformed
        ResultSet rs      = null;
        String consulta   = "";
        String nombreInst = "";
        String fechaInst  = "";
        ParCombo pc       = null;
        
        try{
            int numCols[] = jTblBusqueda.getSelectedRows();
            if(numCols.length > 0)
            {
                JOptionPane optionPane=new JOptionPane();
                Object[] opciones={"Aceptar","Cancelar"};
                int ret=optionPane.showOptionDialog(null,"¿CONFIRMA QUE DESEA ELIMINAR LA INSTALACIÓN O INSTALACIONES SELECCIONADAS?","Confirmar elimnación de instalaciones.",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,opciones,opciones[0]);
	
                if(ret==JOptionPane.YES_OPTION)
                {
                    for(int i=0; i<numCols.length; i++){
                        int fila = numCols[i];
                        pc         = (ParCombo)jTblBusqueda.getValueAt(fila,1);
                        nombreInst = jTblBusqueda.getValueAt(jTblBusqueda.getSelectedRow(),1).toString();
                        fechaInst  = jTblBusqueda.getValueAt(jTblBusqueda.getSelectedRow(),0).toString();

                        bd.ejecModificacion("DELETE FROM INSTALACIONES WHERE INID="+pc.getKeyInt());
                        bd.ejecModificacion("DELETE FROM CARGAS_INDUSTRIALES WHERE CIINID="+pc.getKeyInt());
                        bd.ejecModificacion("DELETE FROM DATOS_CIRCUITOS WHERE DCINID="+pc.getKeyInt());
                    }
                }
            }
            else
                Mensaje.aviso("Seleccione alguna instalación tras haber introducido algún criterio de búsqueda");
                             
            ModeloTablaNoEditable modelo = null;
            Object [] col = new Object[2];
            modelo = new ModeloTablaNoEditable();
            this.jTblBusqueda.setModel(modelo);
            
            rs = bd.ejecSelect("SELECT * FROM INSTALACIONES");
            if(!rs.next())
            {
                modelo.addColumn("Fecha");
                modelo.addColumn("Nombre de la instalación");
                jTblBusqueda.getColumnModel().getColumn(0).setPreferredWidth(20);
                jTblBusqueda.getColumnModel().getColumn(1).setPreferredWidth(500);
            }
            else
            {
                modelo.addColumn("Fecha");
                modelo.addColumn("Nombre de la instalación");
                rs = bd.ejecSelect("SELECT * FROM INSTALACIONES");
                while (rs.next())
                {
                        pc = new ParCombo(rs.getInt("INID"), rs.getString("INDESC"));
                        col[0] = UtilidadesSQL.convierteTextoFecha((String)rs.getObject("INFECHA"));
                        col[1] = pc;
                        modelo.addRow(col);
                }
                    jTblBusqueda.getColumnModel().getColumn(0).setPreferredWidth(20);
                    jTblBusqueda.getColumnModel().getColumn(1).setPreferredWidth(500);
            }
        }        
       catch(ArrayIndexOutOfBoundsException e){
           Mensaje.aviso("Seleccione alguna instalación tras haber introducido algún criterio de búsqueda");
       }
       catch (SQLException e) {
                Mensaje.error("FrmConsultaInst.java: "+e.getMessage(),e);
       }
    }//GEN-LAST:event_jBttnBorrarActionPerformed

    private void jBttnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnBuscarActionPerformed
        ResultSet rs = null;
        String consulta = "";
        String fecha = UtilidadesSQL.convierteFechaTexto(jTxtFldFecha.getText());
        String nombre = jTxtFldNombre.getText();
        
        if(fecha.equals("") && nombre.equals(""))
            consulta = "SELECT * FROM INSTALACIONES";
        else if(nombre.equals(""))
            consulta = "SELECT * FROM INSTALACIONES WHERE INFECHA = '"+fecha+"'";
        else if(fecha.equals(""))
            consulta = "SELECT * FROM INSTALACIONES WHERE UPPER(INDESC) LIKE '%"+nombre.toUpperCase()+"%'";
        else
            consulta = "SELECT * FROM INSTALACIONES WHERE UPPER(INDESC) LIKE '%"+nombre.toUpperCase()+"%' AND INFECHA = '"+fecha+"'";
        
        try{
            ModeloTablaNoEditable modelo = null;
            rs = bd.ejecSelect(consulta);
            Object [] col = new Object[2];
            if(rs.next())
            {
                modelo = new ModeloTablaNoEditable();
                this.jTblBusqueda.setModel(modelo);

                modelo.addColumn("Fecha");
                modelo.addColumn("Nombre de la instalación");
                rs = bd.ejecSelect(consulta);
                while (rs.next())
                {
                    ParCombo pc = new ParCombo(rs.getInt("INID"), rs.getString("INDESC"));
                    col[0] = UtilidadesSQL.convierteTextoFecha((String)rs.getObject("INFECHA"));
                    col[1] = pc;
                    modelo.addRow(col);
                }
                jTblBusqueda.getColumnModel().getColumn(0).setPreferredWidth(20);
                jTblBusqueda.getColumnModel().getColumn(1).setPreferredWidth(500);
            }
            else
            {
                jTblBusqueda.setModel(new ModeloTablaNoEditable(
                new Object [][] {},new String [] {
                        "Fecha", "Nombre de la instalación"
                    }
                ));
                jTblBusqueda.getColumnModel().getColumn(0).setPreferredWidth(20);
                jTblBusqueda.getColumnModel().getColumn(1).setPreferredWidth(500);
                Mensaje.aviso("No existe ningún registro con el criterio de búsqueda elegido");
            }
        }
        catch(Exception e){
            Mensaje.error("No existe ningún registro con el criterio de búsqueda elegido");
        }
    }//GEN-LAST:event_jBttnBuscarActionPerformed

    private void jBttnMenuPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnMenuPrincipalActionPerformed
        this.setVisible(false);
        JFrame frm = Sesion.getInstance().getFrmEntrada();
        Utilidades.igualarFormularios(frm, this);
        frm.setVisible(true);
    }//GEN-LAST:event_jBttnMenuPrincipalActionPerformed

    private void jBttnIrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBttnIrActionPerformed
        try {
            Cursor oldCursor = this.getCursor();
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
 
            String nombreTipoInst = "";
            String tiCod = "";
            int tiNum;
            
            ParCombo pc = (ParCombo)jTblBusqueda.getValueAt(jTblBusqueda.getSelectedRow(),1);
            int idInst = pc.getKeyInt();
            ResultSet rs = bd.ejecSelect("SELECT * FROM INSTALACIONES WHERE INID="+idInst);
            rs.next();
            tiCod = rs.getString("INTICOD");
            tiNum = rs.getInt("INTINUM");
            
            rs = bd.ejecSelect("SELECT * FROM TIPOS_INSTALACION WHERE TICOD='"+tiCod+"' AND TINUM="+tiNum);
            rs.next();
            nombreTipoInst = rs.getString("TIDESC");
                
            pc = new ParCombo(tiCod,tiNum,nombreTipoInst);
            //Se introduce en la sesion el TIPO DE INSTALACIÓN para que pueda usarlo FrmDatosTecnicosPnl
            Sesion.getInstance().setValorHt(Constantes.SES_TIPO_INSTALACION_ELEGIDA, pc);
            
            //Se crea una instancia que inicializa el proceso de inserción de los datos.
            establecerDatos = new EstablecerDatos(idInst);
            establecerDatos.setInfoDatosGestion();
            establecerDatos.setInfoSuministroDatosTecn();
            establecerDatos.setInfoInstComprendidasDatosTecn();
            establecerDatos.setInfoInstCaractGeneralesDatosTecn();
            establecerDatos.setInfoPrevisionIndustrialesDatosTecn();
            establecerDatos.setInfoPrevCargasViviendasDatosTecn();
            establecerDatos.setInfoPrevCargasOficinasDatosTecn();
            establecerDatos.setInfoResumenDatosTecn();
            
            this.setCursor(oldCursor);
            
            establecerDatos.setVisibleFrmPrincipal(true, this);
            this.setVisible(false);
        }
        catch(ArrayIndexOutOfBoundsException e){
            Mensaje.aviso("Seleccione algún nombre tras haber introducido algún criterio de búsqueda");
       }
       catch (SQLException e) {
            Mensaje.error("El sistema no puede abrir la instalación: "+e.getMessage(),e);
       }
    }//GEN-LAST:event_jBttnIrActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmConsultaInst().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBttnBorrar;
    private javax.swing.JButton jBttnBuscar;
    private javax.swing.JButton jBttnIr;
    private javax.swing.JButton jBttnMenuPrincipal;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblBusqueda;
    private javax.swing.JTextField jTxtFldFecha;
    private javax.swing.JTextField jTxtFldNombre;
    // End of variables declaration//GEN-END:variables
    
}
