/*
 * InputIG.java
 *
 * Created on 1 de junio de 2006, 17:05
 */

package graph.input;

import forms.FrmDatosTecnicosPnl;
import funciones.LimitadorCaracteres;
import funciones.Sesion;
import funciones.Utilidades;
import graph.beans.IGBean;
import java.text.DecimalFormat;
import java.util.ResourceBundle;
import java.util.regex.Pattern;
import javax.swing.CellEditor;
import main.Mensaje;

/**
 *
 * @author  sanjose
 */
public class InputIG extends javax.swing.JPanel {
    private static CellEditor cellEditor;
    private static ResourceBundle bundle = ResourceBundle.getBundle("resources/config/config");
    private IGBean datosIG;
    private String mensaje = null;
    
    /** Creates new form InputIG */
    public InputIG(CellEditor cellEditor) {
        this.cellEditor = cellEditor;
        initComponents();
        establecerRestricciones();
    }
    
    public void installValue(IGBean valor) {
        datosIG = valor;
        
        if(datosIG != null) {
            jTextFieldReferencia.setText(String.valueOf(datosIG.getReferencia()));
            jComboBoxNumeroPolos.setSelectedItem(String.valueOf(datosIG.getNumeroPolos()));
            jComboBoxCalibre.setSelectedItem(DecimalFormat.getInstance().format(datosIG.getCalibre()));
            jTxtRegulacion.setText(String.valueOf(datosIG.getRegulacion()));
            jComboBoxPoderDeCorte.setSelectedItem(DecimalFormat.getInstance().format(datosIG.getPoderDeCorte()));
        }
    }
    
    public IGBean getValue() {
        return datosIG;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabelCalibre = new javax.swing.JLabel();
        jLabelNumeroPolosUnidad = new javax.swing.JLabel();
        jLabelRegulacion = new javax.swing.JLabel();
        jTxtRegulacion = new javax.swing.JTextField();
        jLabelRegulacionUnidad = new javax.swing.JLabel();
        jLabelPoderDeCorte = new javax.swing.JLabel();
        jLabelPoderDeCorteUnidad = new javax.swing.JLabel();
        jBtnAceptar = new javax.swing.JButton();
        jLabelNumeroPolos = new javax.swing.JLabel();
        jLabelCalibreUnidad = new javax.swing.JLabel();
        jComboBoxCalibre = new javax.swing.JComboBox();
        jComboBoxPoderDeCorte = new javax.swing.JComboBox();
        jComboBoxNumeroPolos = new javax.swing.JComboBox();
        jTextFieldReferencia = new javax.swing.JTextField();
        jLabelReferencia = new javax.swing.JLabel();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jLabelCalibre.setText("Calibre");

        jLabelNumeroPolosUnidad.setText("P");

        jLabelRegulacion.setText("Regulaci\u00f3n");

        jLabelRegulacionUnidad.setText("%");

        jLabelPoderDeCorte.setText("Poder de corte");

        jLabelPoderDeCorteUnidad.setText("KA");

        jBtnAceptar.setText("Aceptar");
        jBtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarActionPerformed(evt);
            }
        });

        jLabelNumeroPolos.setText("N\u00ba Polos");

        jLabelCalibreUnidad.setText("A");

        jComboBoxCalibre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "16", "25", "32", "40", "50", "63", "80", "100", "125" }));

        jComboBoxPoderDeCorte.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "25", "36", "50", "70", "150" }));

        jComboBoxNumeroPolos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4" }));

        jLabelReferencia.setText("Referencia");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabelPoderDeCorte)
                            .add(jLabelRegulacion)
                            .add(jLabelCalibre)
                            .add(jLabelNumeroPolos)
                            .add(jLabelReferencia))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jComboBoxPoderDeCorte, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTxtRegulacion)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jComboBoxCalibre, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, jComboBoxNumeroPolos, 0, 72, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabelPoderDeCorteUnidad)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jLabelRegulacionUnidad)
                                        .add(jLabelNumeroPolosUnidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabelCalibreUnidad, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)))
                                .add(24, 24, 24))
                            .add(layout.createSequentialGroup()
                                .add(jTextFieldReferencia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jBtnAceptar)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelReferencia)
                    .add(jTextFieldReferencia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBoxNumeroPolos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelNumeroPolos)
                    .add(jLabelNumeroPolosUnidad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBoxCalibre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelCalibreUnidad)
                    .add(jLabelCalibre))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTxtRegulacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelRegulacionUnidad)
                    .add(jLabelRegulacion))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBoxPoderDeCorte, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelPoderDeCorteUnidad)
                    .add(jLabelPoderDeCorte))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jBtnAceptar)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
// TODO add your handling code here:
    }//GEN-LAST:event_formMousePressed
    
    private void jBtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarActionPerformed
        if(valida()){
            String referencia = (String)jTextFieldReferencia.getText();
            String numeroPolos = jComboBoxNumeroPolos.getSelectedItem().toString();
            double calibre = 0;
            String regulacion = jTxtRegulacion.getText();
            double poderDeCorte = 0;
            try {
                calibre = Double.parseDouble(jComboBoxCalibre.getSelectedItem().toString().replace(",","."));
                poderDeCorte = Double.parseDouble(jComboBoxPoderDeCorte.getSelectedItem().toString().replace(",","."));
            } catch(NumberFormatException e) {}
            datosIG.setReferencia(referencia);
            datosIG.setNumeroPolos(numeroPolos);
            datosIG.setCalibre(calibre);
            datosIG.setRegulacion(regulacion);
            datosIG.setPoderDeCorte(poderDeCorte);
            datosIG.setEditado(true);
            cellEditor.stopCellEditing();
        }
    }//GEN-LAST:event_jBtnAceptarActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAceptar;
    private javax.swing.JComboBox jComboBoxCalibre;
    private javax.swing.JComboBox jComboBoxNumeroPolos;
    private javax.swing.JComboBox jComboBoxPoderDeCorte;
    private javax.swing.JLabel jLabelCalibre;
    private javax.swing.JLabel jLabelCalibreUnidad;
    private javax.swing.JLabel jLabelNumeroPolos;
    private javax.swing.JLabel jLabelNumeroPolosUnidad;
    private javax.swing.JLabel jLabelPoderDeCorte;
    private javax.swing.JLabel jLabelPoderDeCorteUnidad;
    private javax.swing.JLabel jLabelReferencia;
    private javax.swing.JLabel jLabelRegulacion;
    private javax.swing.JLabel jLabelRegulacionUnidad;
    private javax.swing.JTextField jTextFieldReferencia;
    private javax.swing.JTextField jTxtRegulacion;
    // End of variables declaration//GEN-END:variables

    private void establecerRestricciones() {
        jTextFieldReferencia.setDocument(new LimitadorCaracteres(jTextFieldReferencia, 25, false, false));
        jTxtRegulacion.setDocument(new LimitadorCaracteres(jTxtRegulacion, 10, false, false));
    }
        
    private boolean valida(){
        boolean resultado = true;
        this.mensaje=null;
        resultado = resultado && validaReferencia();
        resultado = resultado && validaNumeroPolos();
        resultado = resultado && validaCalibre();
        resultado = resultado && validaRegulacion();
        resultado = resultado && validaPoderDeCorte();
        if(!resultado){
            // Mostrar mensaje
            Mensaje.error(bundle.getString("ERRORES_EN_DATOS_INTRODUCIDOS")+this.mensaje+"\n");
        }
        return resultado;
    }
    
    private boolean validaReferencia(){
        boolean resultado = true;
        String valor = jTextFieldReferencia.getText();
        String label = jLabelReferencia.getText();
        if(valor==null || "".equals(valor)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO")+" "+label+" "+bundle.getString("ES_OBLIGATORIO")+"\n";
            resultado = false;
        }
        return resultado;
    }
       
    private boolean validaNumeroPolos(){
        boolean resultado = true;
        String numeroPolos = (String)jComboBoxNumeroPolos.getSelectedItem();
        if(numeroPolos==null || "".equals(numeroPolos)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO");
            mensaje+= " "+jLabelNumeroPolos.getText()+" ";
            mensaje+= bundle.getString("ES_OBLIGATORIO");
            mensaje+= "\n";
            resultado = false;
        }
        return resultado;
    }
    
    private boolean validaCalibre(){
        boolean resultado = true;
        String calibre = (String)jComboBoxCalibre.getSelectedItem();
        if(calibre==null || "".equals(calibre)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO");
            mensaje+= " "+jLabelCalibre.getText()+" ";
            mensaje+= bundle.getString("ES_OBLIGATORIO");
            mensaje+= "\n";
            resultado = false;
        }
        return resultado;
    }
    
    private boolean validaRegulacion(){
        boolean resultado = true;
        String regulacion = jTxtRegulacion.getText();
        if(regulacion!=null && !"".equals(regulacion)){
            if(!Pattern.matches("[0-1](,[0-9][0-9]?)??\\s?-\\s?[0-1](,[0-9][0-9]?)??", regulacion)){
                // Mensaje campo con formato incorrecto
                if(mensaje==null)mensaje="";
                mensaje+= bundle.getString("EL_CAMPO");
                mensaje+= " "+jLabelRegulacion.getText()+" ";
                mensaje+= bundle.getString("FORMATO_INCORRECTO");
                mensaje+= "\n";
                resultado=false;
            } else {
                // Comprobar que el primero de los valores es menor que el segundo
                double menor = Double.parseDouble(Utilidades.left(regulacion,"-").trim().replace(",","."));
                double mayor = Double.parseDouble(Utilidades.rightBack(regulacion,"-").trim().replace(",","."));
                if(menor>mayor){
                    // Mensaje campo incorrecto por menor > mayor
                    if(mensaje==null)mensaje="";
                    mensaje+= bundle.getString("EN_EL_CAMPO");
                    mensaje+= " "+jLabelRegulacion.getText()+" ";
                    mensaje+= bundle.getString("EL_PRIMER_VALOR_MENOR");
                    mensaje+= "\n";
                    resultado = false;
                }
            }
        } else {
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO");
            mensaje+= " "+jLabelRegulacion.getText()+" ";
            mensaje+= bundle.getString("ES_OBLIGATORIO");
            mensaje+= "\n";
            resultado = false;
        }
        return resultado;
    }
    
    private boolean validaPoderDeCorte(){
        boolean resultado = true;
        String poderDeCorte = (String)jComboBoxPoderDeCorte.getSelectedItem();
        if(poderDeCorte==null || "".equals(poderDeCorte)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO");
            mensaje+= " "+jLabelPoderDeCorte.getText()+" ";
            mensaje+= bundle.getString("ES_OBLIGATORIO");
            mensaje+= "\n";
            resultado = false;
        }
        return resultado;
    }
    
}
