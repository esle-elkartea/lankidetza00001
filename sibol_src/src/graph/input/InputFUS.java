package graph.input;

import funciones.LimitadorCaracteres;
import graph.beans.FUSBean;
import java.text.DecimalFormat;
import java.util.ResourceBundle;
import java.util.regex.Pattern;
import javax.swing.CellEditor;
import main.Mensaje;

/**
 *
 * @author  sanjose
 */
public class InputFUS extends javax.swing.JPanel {
    private static CellEditor cellEditor;
    private static ResourceBundle bundle = ResourceBundle.getBundle("resources/config/config");
    private FUSBean datosFUS;
    private String mensaje = null;
    
    /** Creates new form InputFUS */
    public InputFUS(CellEditor cellEditor) {
        this.cellEditor = cellEditor;
        initComponents();
        establecerRestricciones();
    }
    
    public void installValue(FUSBean valor) {
        datosFUS = valor;
        
        if(datosFUS != null) {
            jTxtReferencia.setText(String.valueOf(datosFUS.getReferencia()));
            jTxtTalla.setText(DecimalFormat.getInstance().format(datosFUS.getTalla()));
            jComboBoxCalibre.setSelectedItem(DecimalFormat.getInstance().format(datosFUS.getCalibre()));
        }
    }
    
    public FUSBean getValue() {
        return datosFUS;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabelTalla = new javax.swing.JLabel();
        jTxtTalla = new javax.swing.JTextField();
        jBtnAceptar = new javax.swing.JButton();
        jLabelReferencia = new javax.swing.JLabel();
        jTxtReferencia = new javax.swing.JTextField();
        jLabelCalibre = new javax.swing.JLabel();
        jLabelCalibreUnidad = new javax.swing.JLabel();
        jComboBoxCalibre = new javax.swing.JComboBox();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jLabelTalla.setText("Talla");

        jBtnAceptar.setText("Aceptar");
        jBtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarActionPerformed(evt);
            }
        });

        jLabelReferencia.setText("Referencia");

        jLabelCalibre.setText("Calibre");

        jLabelCalibreUnidad.setText("A");

        jComboBoxCalibre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0,5", "1", "2", "3", "4", "6", "10", "16", "20", "25", "32", "40", "50", "63", "80", "100", "125" }));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabelCalibre)
                    .add(jLabelReferencia)
                    .add(jLabelTalla))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jComboBoxCalibre, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jTxtTalla, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabelCalibreUnidad))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jBtnAceptar)
                        .add(jTxtReferencia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelReferencia)
                    .add(jTxtReferencia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelTalla)
                    .add(jTxtTalla, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelCalibre)
                    .add(jComboBoxCalibre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelCalibreUnidad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jBtnAceptar)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
// TODO add your handling code here:
    }//GEN-LAST:event_formMousePressed
    
    private void jBtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarActionPerformed
        if(valida()){
            datosFUS.setReferencia(jTxtReferencia.getText());
            try {
                datosFUS.setTalla(Double.parseDouble(jTxtTalla.getText().replace(",",".")));
                datosFUS.setCalibre(Double.parseDouble(((String)jComboBoxCalibre.getSelectedItem()).replace(",",".")));
            } catch (NumberFormatException e) {}
            datosFUS.setEditado(true);
            cellEditor.stopCellEditing();
        }
    }//GEN-LAST:event_jBtnAceptarActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAceptar;
    private javax.swing.JComboBox jComboBoxCalibre;
    private javax.swing.JLabel jLabelCalibre;
    private javax.swing.JLabel jLabelCalibreUnidad;
    private javax.swing.JLabel jLabelReferencia;
    private javax.swing.JLabel jLabelTalla;
    private javax.swing.JTextField jTxtReferencia;
    private javax.swing.JTextField jTxtTalla;
    // End of variables declaration//GEN-END:variables
    
    private void establecerRestricciones() {
        jTxtReferencia.setDocument(new LimitadorCaracteres(jTxtReferencia, 25, false, false));
        jTxtTalla.setDocument(new LimitadorCaracteres(jTxtTalla, 3, true, false));
    }
        
    private boolean valida(){
        boolean resultado = true;
        this.mensaje=null;
        resultado = resultado && validaReferencia();
        resultado = resultado && validaTalla();
        resultado = resultado && validaCalibre();
        if(!resultado){
            // Mostrar mensaje
            Mensaje.error(bundle.getString("ERRORES_EN_DATOS_INTRODUCIDOS")+this.mensaje+"\n");
        }
        return resultado;
    }
       
    private boolean validaReferencia(){
        boolean resultado = true;
        String valor = jTxtReferencia.getText();
        String label = jLabelReferencia.getText();
        if(valor==null || "".equals(valor)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO")+" "+label+" "+bundle.getString("ES_OBLIGATORIO")+"\n";
            resultado = false;
        }
        return resultado;
    }
    
    private boolean validaTalla(){
        boolean resultado = true;
        String talla = jTxtTalla.getText();
        if(talla!=null && !"".equals(talla)){
            if(!Pattern.matches("[0-9][0-9]?[0-9]?", talla)){
                // Mensaje campo con formato incorrecto
                if(mensaje==null)mensaje="";
                mensaje+= bundle.getString("EL_CAMPO");
                mensaje+= " "+jLabelTalla.getText()+" ";
                mensaje+= bundle.getString("FORMATO_INCORRECTO");
                mensaje+= "\n";
                resultado=false;
            }
        }
        return resultado;
    }
    
    private boolean validaCalibre(){
        boolean resultado = true;
        String calibre = (String)jComboBoxCalibre.getSelectedItem();
        if(calibre==null || "".equals(calibre)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO");
            mensaje+= " "+jLabelCalibre.getText()+" ";
            mensaje+= bundle.getString("ES_OBLIGATORIO");
            mensaje+= "\n";
            resultado = false;
        }
        return resultado;
    }
    
}
