/*
 * InputGRD.java
 *
 * Created on 1 de junio de 2006, 17:05
 */

package graph.input;

import funciones.AutoComplCmbBxRestrictivo;
import funciones.BaseDatos;
import funciones.LimitadorCaracteres;
import funciones.ParCombo;
import funciones.Sesion;
import graph.beans.GRDBean;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ResourceBundle;
import java.util.regex.Pattern;
import javax.swing.CellEditor;
import main.Mensaje;

/**
 *
 * @author  sanjose
 */
public class InputGRD extends javax.swing.JPanel {
    private static CellEditor cellEditor;
    private static ResourceBundle bundle = ResourceBundle.getBundle("resources/config/config");
    private GRDBean datosGRD;
    private String mensaje = null;
    private BaseDatos bd;
    
    /** Creates new form InputGRD */
    public InputGRD(CellEditor cellEditor) {
        this.cellEditor = cellEditor;
        bd = Sesion.getInstance().getBaseDatos();
        initComponents();
        establecerRestricciones();
        agregarDatosCombox();
    }
    
    public void installValue(GRDBean valor) {
        datosGRD = valor;
        
        if(datosGRD != null) {
            jTextFieldReferencia.setText(datosGRD.getReferencia());
            for(int i=0;i<jComboBoxTipo.getItemCount();i++){
                ParCombo elemento = (ParCombo)jComboBoxTipo.getItemAt(i);
                if(elemento.getKeyString().equals(datosGRD.getTipo())){
                    jComboBoxTipo.setSelectedIndex(i);
                    break;
                }
            }
            jTxtNumeroElectrodos.setText(DecimalFormat.getInstance().format(datosGRD.getNumeroElectrodos()));
            jTxtLineaPrincipal.setText(DecimalFormat.getInstance().format(datosGRD.getLineaPrincipal()));
            jTxtLineaEnlace.setText(DecimalFormat.getInstance().format(datosGRD.getLineaEnlace()));
            jTxtOhmios.setText(DecimalFormat.getInstance().format(datosGRD.getOhmios()));
        }
    }
    
    public GRDBean getValue() {
        return datosGRD;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jBtnAceptar = new javax.swing.JButton();
        jLabelTipo = new javax.swing.JLabel();
        jTxtNumeroElectrodos = new javax.swing.JTextField();
        jLabelNumeroElectrodos = new javax.swing.JLabel();
        jLabelLineaPrincipal = new javax.swing.JLabel();
        jLabelLineaPrincipalUnidad = new javax.swing.JLabel();
        jComboBoxTipo = new javax.swing.JComboBox();
        jTxtLineaPrincipal = new javax.swing.JTextField();
        jLabelLineaEnlaceUnidad = new javax.swing.JLabel();
        jTxtLineaEnlace = new javax.swing.JTextField();
        jLabelLineaEnlace = new javax.swing.JLabel();
        jLabelOhmios = new javax.swing.JLabel();
        jTxtOhmios = new javax.swing.JTextField();
        jLabelOhmiosUnidad = new javax.swing.JLabel();
        jTextFieldReferencia = new javax.swing.JTextField();
        jLabelReferencia = new javax.swing.JLabel();

        jBtnAceptar.setText("Aceptar");
        jBtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarActionPerformed(evt);
            }
        });

        jLabelTipo.setText("Tipo");

        jLabelNumeroElectrodos.setText("N\u00ba Electrodos");

        jLabelLineaPrincipal.setText("L\u00ednea Principal");

        jLabelLineaPrincipalUnidad.setText("mm\u00B2 - Cu");

        jComboBoxTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoItemStateChanged(evt);
            }
        });

        jLabelLineaEnlaceUnidad.setText("mm\u00B2 - Cu");

        jLabelLineaEnlace.setText("L\u00ednea de enlace");

        jLabelOhmios.setText("Ohmios");

        jLabelOhmiosUnidad.setText("\u2126");

        jLabelReferencia.setText("Referencia");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(jLabelReferencia)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextFieldReferencia, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabelNumeroElectrodos)
                            .add(jLabelLineaPrincipal)
                            .add(jLabelLineaEnlace)
                            .add(jLabelOhmios)
                            .add(jLabelTipo))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jTxtLineaEnlace, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, jTxtNumeroElectrodos)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, jTxtLineaPrincipal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                                    .add(jTxtOhmios, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabelLineaEnlaceUnidad)
                                    .add(jLabelOhmiosUnidad)
                                    .add(jLabelLineaPrincipalUnidad)))
                            .add(jComboBoxTipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(162, Short.MAX_VALUE)
                        .add(jBtnAceptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldReferencia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelReferencia))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBoxTipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelTipo))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelNumeroElectrodos)
                    .add(jTxtNumeroElectrodos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTxtLineaPrincipal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelLineaPrincipal)
                    .add(jLabelLineaPrincipalUnidad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTxtLineaEnlace, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelLineaEnlace)
                    .add(jLabelLineaEnlaceUnidad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTxtOhmios, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelOhmios)
                    .add(jLabelOhmiosUnidad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jBtnAceptar)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoItemStateChanged
        String tipo = ((ParCombo)jComboBoxTipo.getSelectedItem()).getKeyString();
        if("MA".equalsIgnoreCase(tipo)){
            jTxtNumeroElectrodos.setText("0");
            jTxtNumeroElectrodos.setEditable(false);
        } else {
            jTxtNumeroElectrodos.setEditable(true);
        }
    }//GEN-LAST:event_jComboBoxTipoItemStateChanged
    
    private void jBtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarActionPerformed
        if(valida()){
            String referencia =  (String)jTextFieldReferencia.getText();
            String tipo = ((ParCombo)jComboBoxTipo.getSelectedItem()).getKeyString();
            double numeroElectrodos = 0;
            double lineaPrincipal = 0;
            double lineaEnlace = 0;
            double ohmios = 0;
            try {
                numeroElectrodos =  jTxtNumeroElectrodos.getText().equals("") ? 0 : Double.parseDouble(jTxtNumeroElectrodos.getText().replace(",","."));
                lineaPrincipal = Double.parseDouble(jTxtLineaPrincipal.getText().replace(",","."));
                lineaEnlace = Double.parseDouble(jTxtLineaEnlace.getText().replace(",","."));
                ohmios = Double.parseDouble(jTxtOhmios.getText().replace(",","."));
            } catch(NumberFormatException e) {}
            datosGRD.setReferencia(referencia);
            datosGRD.setTipo(tipo);
            datosGRD.setNumeroElectrodos(numeroElectrodos);
            datosGRD.setLineaPrincipal(lineaPrincipal);
            datosGRD.setLineaEnlace(lineaEnlace);
            datosGRD.setOhmios(ohmios);
            datosGRD.setEditado(true);
            cellEditor.stopCellEditing();
        }
    }//GEN-LAST:event_jBtnAceptarActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAceptar;
    private javax.swing.JComboBox jComboBoxTipo;
    private javax.swing.JLabel jLabelLineaEnlace;
    private javax.swing.JLabel jLabelLineaEnlaceUnidad;
    private javax.swing.JLabel jLabelLineaPrincipal;
    private javax.swing.JLabel jLabelLineaPrincipalUnidad;
    private javax.swing.JLabel jLabelNumeroElectrodos;
    private javax.swing.JLabel jLabelOhmios;
    private javax.swing.JLabel jLabelOhmiosUnidad;
    private javax.swing.JLabel jLabelReferencia;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JTextField jTextFieldReferencia;
    private javax.swing.JTextField jTxtLineaEnlace;
    private javax.swing.JTextField jTxtLineaPrincipal;
    private javax.swing.JTextField jTxtNumeroElectrodos;
    private javax.swing.JTextField jTxtOhmios;
    // End of variables declaration//GEN-END:variables

    private void establecerRestricciones() {
        jTextFieldReferencia.setDocument(new LimitadorCaracteres(jTextFieldReferencia, 25, false, false));
        jTxtNumeroElectrodos.setDocument(new LimitadorCaracteres(jTxtNumeroElectrodos, 20, true, false));
        jTxtLineaPrincipal.setDocument(new LimitadorCaracteres(jTxtLineaPrincipal, 20, true, true));
        jTxtLineaEnlace.setDocument(new LimitadorCaracteres(jTxtLineaEnlace, 20, true, true));
        jTxtOhmios.setDocument(new LimitadorCaracteres(jTxtOhmios, 20, true, true));
    }
    
    private void agregarDatosCombox() {
        //Ingresar los datos en los combox.
        ResultSet rs = null;

        try {
            rs = bd.ejecSelect("SELECT * FROM TIPOS_TIERRA ORDER BY TTDESC");
            while(rs.next())
                jComboBoxTipo.addItem(new ParCombo(rs.getString(1), rs.getString(2)));
        } catch(SQLException e){
            Mensaje.error("InputGRD.java. "+e.getMessage(), e);
        }
        new AutoComplCmbBxRestrictivo(jComboBoxTipo);
    }
        
    private boolean valida(){
        boolean resultado = true;
        this.mensaje=null;
        resultado = resultado && validaReferencia();
        resultado = resultado && validaTipo();
        resultado = resultado && validaLineaPrincipal();
        resultado = resultado && validaLineaEnlace();
        resultado = resultado && validaOhmios();
        if(!resultado){
            // Mostrar mensaje
            Mensaje.error(bundle.getString("ERRORES_EN_DATOS_INTRODUCIDOS")+this.mensaje+"\n");
        }
        return resultado;
    }
    
    private boolean validaReferencia(){
        boolean resultado = true;
        String valor = jTextFieldReferencia.getText();
        String label = jLabelReferencia.getText();
        if(valor==null || "".equals(valor)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO")+" "+label+" "+bundle.getString("ES_OBLIGATORIO")+"\n";
            resultado = false;
        }
        return resultado;
    }
       
    private boolean validaTipo(){
        boolean resultado = true;
        String tipo = ((ParCombo)jComboBoxTipo.getSelectedItem()).getKeyString();
        if(tipo==null || "".equals(tipo)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO");
            mensaje+= " "+jLabelTipo.getText()+" ";
            mensaje+= bundle.getString("ES_OBLIGATORIO");
            mensaje+= "\n";
            resultado = false;
        }
        return resultado;
    }
       
    private boolean validaLineaPrincipal(){
        boolean resultado = true;
        String lineaPrincipal = (String)jTxtLineaPrincipal.getText();
        if(lineaPrincipal==null || "".equals(lineaPrincipal)){
//            // Mensaje campo obligatorio
//            if(mensaje==null)mensaje="";
//            mensaje+= bundle.getString("EL_CAMPO");
//            mensaje+= " "+jLabelLineaPrincipal.getText()+" ";
//            mensaje+= bundle.getString("ES_OBLIGATORIO");
//            mensaje+= "\n";
//            resultado = false;
        } else {
            if(!Pattern.matches("[0-9]+(,[0-9]{1,2})?", lineaPrincipal)){
                // Mensaje campo con formato incorrecto
                if(mensaje==null)mensaje="";
                mensaje+= bundle.getString("EL_CAMPO");
                mensaje+= " "+jLabelLineaPrincipal.getText()+" ";
                mensaje+= bundle.getString("FORMATO_INCORRECTO");
                mensaje+= "\n";
                resultado=false;
            }
        }
        return resultado;
    }
    
    private boolean validaLineaEnlace(){
        boolean resultado = true;
        String lineaEnlace = (String)jTxtLineaEnlace.getText();
        if(lineaEnlace==null || "".equals(lineaEnlace)){
//            // Mensaje campo obligatorio
//            if(mensaje==null)mensaje="";
//            mensaje+= bundle.getString("EL_CAMPO");
//            mensaje+= " "+jLabelLineaEnlace.getText()+" ";
//            mensaje+= bundle.getString("ES_OBLIGATORIO");
//            mensaje+= "\n";
//            resultado = false;
        } else {
            if(!Pattern.matches("[0-9]+(,[0-9]{1,2})?", lineaEnlace)){
                // Mensaje campo con formato incorrecto
                if(mensaje==null)mensaje="";
                mensaje+= bundle.getString("EL_CAMPO");
                mensaje+= " "+jLabelLineaEnlace.getText()+" ";
                mensaje+= bundle.getString("FORMATO_INCORRECTO");
                mensaje+= "\n";
                resultado=false;
            }
        }
        return resultado;
    }
    
    private boolean validaOhmios(){
        boolean resultado = true;
        String ohmios = (String)jTxtOhmios.getText();
        if(ohmios==null || "".equals(ohmios)){
            // Mensaje campo obligatorio
            if(mensaje==null)mensaje="";
            mensaje+= bundle.getString("EL_CAMPO");
            mensaje+= " "+jLabelOhmios.getText()+" ";
            mensaje+= bundle.getString("ES_OBLIGATORIO");
            mensaje+= "\n";
            resultado = false;
        } else {
            if(!Pattern.matches("[0-9]+(,[0-9]{1,2})?", ohmios)){
                // Mensaje campo con formato incorrecto
                if(mensaje==null)mensaje="";
                mensaje+= bundle.getString("EL_CAMPO");
                mensaje+= " "+jLabelOhmios.getText()+" ";
                mensaje+= bundle.getString("FORMATO_INCORRECTO");
                mensaje+= "\n";
                resultado=false;
            }
        }
        return resultado;
    }
    
}
